esphome:
  name: dining-blind
  friendly_name: dining-blind
  platform: ESP8266
  board: d1_mini

logger:
ota:
  password: !secret ESP_FallBack_Pass

wifi:
  ssid: !secret MyFi_SSID
  password: !secret MyFi_Pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "blinds_hotspot"
    password: !secret ESP_FallBack_Pass

captive_portal:
    
web_server:
  port: 80

api:
  encryption:
    key: "IkzZCeNyrBjd1NszGeCrCMchb9U+RdA944lpmC0R0wM="
  services:
    - service: control_blind
      variables:
        target: int
      then:
        - stepper.set_target:
            id: my_stepper
            target: !lambda 'return target;'
        - sensor.template.publish:
            id: position
            state: !lambda 'return target;'
cover:
  - platform: template
    name: "My Blind"
    id: my_blind
    device_class: blind
    open_action:
      - delay: .05s
      - stepper.set_target:
          id: my_stepper
          target: 6050
      - sensor.template.publish:
          id: position
          state: !lambda return id(my_stepper).target_position;
      - delay: 60s
    close_action:
      - delay: .05s
      - stepper.set_target:
          id: my_stepper
          target: 0
      - delay: 60s
      - sensor.template.publish:
            id: position
            state: !lambda return id(my_stepper).target_position;
    stop_action:
      - stepper.set_target:
          id: my_stepper
          target: !lambda return id(my_stepper).current_position;
      - sensor.template.publish:
            id: position
            state: !lambda return id(my_stepper).current_position;
    optimistic: true
    assumed_state: true
 
sensor:
  - platform: template
    name: "My Blind Position"
    id: position
 
stepper:
  - platform: uln2003
    id: my_stepper
    pin_a: D1
    pin_b: D2
    pin_c: D5
    pin_d: D6
    max_speed: 250 steps/s
    sleep_when_done: true

binary_sensor:
  - platform: gpio
    pin:
      number: D3
      inverted: TRUE
      mode:
        input: TRUE
        pullup: TRUE
    name: Open Button Sensor
    filters:
      - delayed_on: 10ms
    on_multi_click:
#SINGLE CLICK
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          - delay: .05s
          - stepper.set_target:
              id: my_stepper
              target: 0
          - delay: 60s
          - sensor.template.publish:
                id: position
                state: !lambda return id(my_stepper).target_position;
  - platform: gpio
    pin:
      number: D4
      inverted: TRUE
      mode:
        input: TRUE
        pullup: TRUE
    name: Close Button Sensor
    filters:
      - delayed_on: 10ms
    on_multi_click:
#SINGLE CLICK
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          - delay: .05s
          - stepper.set_target:
              id: my_stepper
              target: 6050
          - sensor.template.publish:
              id: position
              state: !lambda return id(my_stepper).target_position;
